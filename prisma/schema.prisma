// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Modelo de Usuario
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relaciones
  events    Event[]
  contacts  Contact[]
  categories Category[]
}

// Modelo de Categor√≠a
model Category {
  id          String   @id @default(cuid())
  name        String
  color       String   @default("#3B82F6")
  description String?
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relaciones
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  events Event[]

  @@unique([name, userId])
}

// Modelo de Evento/Cita
model Event {
  id          String    @id @default(cuid())
  title       String
  description String?
  startTime   DateTime
  endTime     DateTime
  location    String?
  isAllDay    Boolean   @default(false)
  status      EventStatus @default(PENDING)
  priority    Priority  @default(MEDIUM)
  userId      String
  categoryId  String?
  contactId   String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relaciones
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  category Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  contact  Contact?  @relation(fields: [contactId], references: [id], onDelete: SetNull)
  
  // Recordatorios
  reminders Reminder[]
}

// Modelo de Contacto
model Contact {
  id        String   @id @default(cuid())
  name      String
  email     String?
  phone     String?
  company   String?
  position  String?
  notes     String?
  avatar    String?
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relaciones
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  events Event[]
}

// Modelo de Recordatorio
model Reminder {
  id        String   @id @default(cuid())
  minutes   Int      // Minutos antes del evento
  method    ReminderMethod @default(NOTIFICATION)
  eventId   String
  createdAt DateTime @default(now())

  // Relaciones
  event Event @relation(fields: [eventId], references: [id], onDelete: Cascade)
}

// Enumeraciones
enum EventStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

enum ReminderMethod {
  NOTIFICATION
  EMAIL
  SMS
}
